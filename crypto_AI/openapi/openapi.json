{
  "openapi": "3.1.0",
  "info": {
    "title": "Moveo AI Crypto Advisor API",
    "description": "API for the Moveo AI Crypto Advisor platform providing personalized cryptocurrency insights and market analysis",
    "version": "1.0.0",
    "contact": {
      "name": "Moveo Development Team",
      "email": "dev@moveo.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/api",
      "description": "Development server"
    },
    {
      "url": "https://api.moveo-crypto.com/api",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and user management"
    },
    {
      "name": "Onboarding",
      "description": "User onboarding and preferences"
    },
    {
      "name": "Dashboard",
      "description": "Dashboard content and data"
    },
    {
      "name": "Votes",
      "description": "User voting and feedback"
    },
    {
      "name": "Export",
      "description": "Data export endpoints"
    },
    {
      "name": "Webhooks",
      "description": "Webhook management and testing"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create new user account",
        "description": "Register a new user account with email and password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  }
                },
                "required": ["email", "password", "name"]
              },
              "example": {
                "email": "john.doe@example.com",
                "password": "securepassword123",
                "name": "John Doe"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": { "$ref": "../schemas/users.schema.json" },
                        "accessToken": {
                          "type": "string",
                          "description": "JWT access token"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error"
          },
          "409": {
            "description": "Conflict - email already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Authenticate user",
        "description": "Login with email and password to receive JWT token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              },
              "example": {
                "email": "john.doe@example.com",
                "password": "securepassword123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": { "$ref": "../schemas/users.schema.json" },
                        "accessToken": {
                          "type": "string",
                          "description": "JWT access token"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid credentials"
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user profile",
        "description": "Retrieve the authenticated user's profile information",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "$ref": "../schemas/users.schema.json" },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing token"
          }
        }
      }
    },
    "/onboarding": {
      "post": {
        "tags": ["Onboarding"],
        "summary": "Complete user onboarding",
        "description": "Save user preferences and complete onboarding process",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assets": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": ["BTC", "ETH", "SOL", "ADA", "DOT", "MATIC", "AVAX", "LINK"]
                    }
                  },
                  "investorType": {
                    "type": "string",
                    "enum": ["HODLer", "Day Trader", "NFT Collector"]
                  },
                  "contentTypes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": ["Market News", "Charts", "Social", "Fun"]
                    }
                  }
                },
                "required": ["assets", "investorType", "contentTypes"]
              },
              "example": {
                "assets": ["BTC", "ETH", "SOL"],
                "investorType": "HODLer",
                "contentTypes": ["Market News", "Charts"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Onboarding completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error"
          }
        }
      }
    },
    "/dashboard/news": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Get market news",
        "description": "Retrieve latest cryptocurrency news articles",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of news items to return",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of items to skip",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "News items retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "../schemas/news_items.schema.json" }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": { "type": "integer" },
                        "limit": { "type": "integer" },
                        "total": { "type": "integer" },
                        "totalPages": { "type": "integer" }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/prices": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Get cryptocurrency prices",
        "description": "Retrieve current cryptocurrency price data",
        "responses": {
          "200": {
            "description": "Price data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "../schemas/price_snapshots.schema.json" }
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/ai-insight": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Get AI insight",
        "description": "Retrieve daily AI-generated market insight",
        "responses": {
          "200": {
            "description": "AI insight retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "$ref": "../schemas/ai_insights.schema.json" },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/meme": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Get daily meme",
        "description": "Retrieve daily cryptocurrency meme",
        "responses": {
          "200": {
            "description": "Meme retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": { "$ref": "../schemas/memes.schema.json" },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vote": {
      "post": {
        "tags": ["Votes"],
        "summary": "Submit a vote",
        "description": "Vote on content items (news, prices, AI insights, memes)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "section": {
                    "type": "string",
                    "enum": ["news", "prices", "ai", "meme"]
                  },
                  "itemId": {
                    "type": "string",
                    "description": "ID of the item being voted on"
                  },
                  "vote": {
                    "type": "string",
                    "enum": ["up", "down"]
                  }
                },
                "required": ["section", "itemId", "vote"]
              },
              "example": {
                "section": "news",
                "itemId": "ee0e8400-e29b-41d4-a716-446655440009",
                "vote": "up"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vote submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "newVoteCount": {
                          "type": "object",
                          "properties": {
                            "up": { "type": "integer" },
                            "down": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error"
          }
        }
      }
    },
    "/export/users": {
      "get": {
        "tags": ["Export"],
        "summary": "Export users data",
        "description": "Export user data with optional filtering and pagination",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to return",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Export records created since this timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users data exported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "../schemas/users.schema.json" }
                    },
                    "exportedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/export/news": {
      "get": {
        "tags": ["Export"],
        "summary": "Export news data",
        "description": "Export news items data",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to return",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Export records created since this timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "News data exported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "../schemas/news_items.schema.json" }
                    },
                    "exportedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/export/votes": {
      "get": {
        "tags": ["Export"],
        "summary": "Export votes data",
        "description": "Export user votes data",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to return",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Export records created since this timestamp",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Votes data exported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "../schemas/votes.schema.json" }
                    },
                    "exportedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/test": {
      "post": {
        "tags": ["Webhooks"],
        "summary": "Test webhook event",
        "description": "Simulate a webhook event for testing purposes (development only)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventType": {
                    "type": "string",
                    "enum": [
                      "user.created",
                      "user.updated",
                      "preference.updated",
                      "news.ingested",
                      "vote.created",
                      "recommendation.served"
                    ]
                  },
                  "data": {
                    "type": "object",
                    "description": "Test data for the webhook event"
                  }
                },
                "required": ["eventType", "data"]
              },
              "example": {
                "eventType": "user.created",
                "data": {
                  "user": {
                    "id": "550e8400-e29b-41d4-a716-446655440000",
                    "email": "test@example.com",
                    "name": "Test User"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook test event sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "webhookId": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "sent": {
                          "type": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from /auth/login endpoint"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "details": {
            "type": "object",
            "description": "Additional error details"
          }
        },
        "required": ["message"]
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": ["message", "errors"]
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request - validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized - invalid or missing authentication",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden - insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
