{
  "info": {
    "name": "Moveo AI Crypto Advisor API",
    "description": "Complete API collection for the Moveo AI Crypto Advisor platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": {
      "major": 1,
      "minor": 0,
      "patch": 0
    }
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001/api",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-inject Authorization header if token is set",
          "if (pm.collectionVariables.get('token')) {",
          "    pm.request.headers.add({",
          "        key: 'Authorization',",
          "        value: 'Bearer ' + pm.collectionVariables.get('token')",
          "    });",
          "}"
        ]
      }
    }
  ],
  "item": [
    {
      "name": "Auth",
      "description": "Authentication endpoints",
      "item": [
        {
          "name": "Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securepassword123\",\n  \"name\": \"John Doe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "signup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "    pm.expect(jsonData.data).to.have.property('accessToken');",
                  "});",
                  "",
                  "// Store token for subsequent requests",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('token', jsonData.data.accessToken);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securepassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "    pm.expect(jsonData.data).to.have.property('accessToken');",
                  "});",
                  "",
                  "// Store token for subsequent requests",
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('token', jsonData.data.accessToken);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/me",
              "host": ["{{baseUrl}}"],
              "path": ["me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('email');",
                  "    pm.expect(jsonData.data).to.have.property('name');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Onboarding",
      "description": "User onboarding endpoints",
      "item": [
        {
          "name": "Complete Onboarding",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assets\": [\"BTC\", \"ETH\", \"SOL\"],\n  \"investorType\": \"HODLer\",\n  \"contentTypes\": [\"Market News\", \"Charts\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/onboarding",
              "host": ["{{baseUrl}}"],
              "path": ["onboarding"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response indicates success', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Dashboard",
      "description": "Dashboard content endpoints",
      "item": [
        {
          "name": "Get News",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard/news?limit=10&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard", "news"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has news data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Prices",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard/prices",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard", "prices"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has price data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get AI Insight",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard/ai-insight",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard", "ai-insight"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has AI insight data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('title');",
                  "    pm.expect(jsonData.data).to.have.property('content');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Meme",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/dashboard/meme",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard", "meme"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has meme data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    pm.expect(jsonData.data).to.have.property('title');",
                  "    pm.expect(jsonData.data).to.have.property('imageUrl');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Votes",
      "description": "Voting endpoints",
      "item": [
        {
          "name": "Submit Vote",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"section\": \"news\",\n  \"itemId\": \"ee0e8400-e29b-41d4-a716-446655440009\",\n  \"vote\": \"up\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/vote",
              "host": ["{{baseUrl}}"],
              "path": ["vote"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response indicates success', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.success).to.be.true;",
                  "    pm.expect(jsonData.data.newVoteCount).to.have.property('up');",
                  "    pm.expect(jsonData.data.newVoteCount).to.have.property('down');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Export",
      "description": "Data export endpoints",
      "item": [
        {
          "name": "Export Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/export/users?limit=100",
              "host": ["{{baseUrl}}"],
              "path": ["export", "users"],
              "query": [
                {
                  "key": "limit",
                  "value": "100"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has export data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "    pm.expect(jsonData).to.have.property('exportedAt');",
                  "    pm.expect(jsonData).to.have.property('total');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Export News",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/export/news?limit=100",
              "host": ["{{baseUrl}}"],
              "path": ["export", "news"],
              "query": [
                {
                  "key": "limit",
                  "value": "100"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has export data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "    pm.expect(jsonData).to.have.property('exportedAt');",
                  "    pm.expect(jsonData).to.have.property('total');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Export Votes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/export/votes?limit=100",
              "host": ["{{baseUrl}}"],
              "path": ["export", "votes"],
              "query": [
                {
                  "key": "limit",
                  "value": "100"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has export data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.be.an('array');",
                  "    pm.expect(jsonData).to.have.property('exportedAt');",
                  "    pm.expect(jsonData).to.have.property('total');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Webhooks",
      "description": "Webhook testing endpoints",
      "item": [
        {
          "name": "Test Webhook",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"eventType\": \"user.created\",\n  \"data\": {\n    \"user\": {\n      \"id\": \"550e8400-e29b-41d4-a716-446655440000\",\n      \"email\": \"test@example.com\",\n      \"name\": \"Test User\",\n      \"hasCompletedOnboarding\": false,\n      \"isActive\": true,\n      \"createdAt\": \"2024-01-15T10:30:00Z\",\n      \"updatedAt\": \"2024-01-15T10:30:00Z\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/webhooks/test",
              "host": ["{{baseUrl}}"],
              "path": ["webhooks", "test"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response indicates webhook sent', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.sent).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('webhookId');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
